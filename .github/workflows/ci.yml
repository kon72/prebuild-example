name: CI
on:
  - push
  - pull_request

permissions: {}

jobs:
  test:
    name: Test for ${{ matrix.platform.display-name }}, Node.js ${{ matrix.node-version }}
    timeout-minutes: 10
    runs-on: ${{ matrix.platform.os }}
    container: ${{ matrix.platform.container }}
    strategy:
      fail-fast: false
      matrix:
        node-version: [16]
        platform:
          [
            {display-name: linux-glibc-x64, os: ubuntu-20.04, target-arch: x64},
            {display-name: darwin-x64, os: macos-latest, target-arch: x64},
            {
              display-name: darwin-arm64,
              os: [self-hosted, macOS, arm64],
              target-arch: arm64,
            },
            {display-name: win32-ia32, os: windows-2019, target-arch: x86},
            {display-name: win32-x64, os: windows-2019, target-arch: x64},
          ]
        include:
          - platform:
              display-name: linux-musl-x64
              os: ubuntu-latest
              container: 'node:16-alpine'
            node-version: 16
          - platform:
              display-name: linux-musl-x64
              os: ubuntu-latest
              container: 'node:18-alpine'
            node-version: 18
          - platform:
              display-name: linux-musl-x64
              os: ubuntu-latest
              container: 'node:20-alpine'
            node-version: 20

    steps:
      - name: Dependencies (Linux musl)
        if: contains(matrix.platform.container, 'alpine')
        run: apk add build-base python3 --update-cache

      - name: Set git to use LF line endings
        if: contains(matrix.platform.os, 'windows')
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout
        uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2

      - name: Setup Node.js environment
        if: "!contains(matrix.platform.container, 'alpine')"
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          architecture: ${{ matrix.platform.target-arch }}
          cache: 'pnpm'

      - name: Print versions
        run: |
          node --version
          pnpm --version
          node -p "process.platform + '@' + process.arch"

      - name: Install dependencies
        run: pnpm install

      - name: Format
        run: pnpm format:check

      - name: Prebuild
        run: pnpm -r prebuild

      - name: Build
        run: pnpm -r build

      - name: Test
        run: pnpm -r test

  prebuild:
    name: Prebuild for ${{ matrix.display-name }}
    if: startsWith(github.ref, 'refs/tags/')
    needs: test
    timeout-minutes: 10
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - display-name: linux-glibc-x64
            os: ubuntu-20.04
            target-arch: x64
          - display-name: darwin-x64
            os: macos-latest
            target-arch: x64
          - display-name: darwin-arm64
            os: [self-hosted, macOS, arm64]
            target-arch: arm64
          - display-name: win32-ia32
            os: windows-2019
            target-arch: x86
          - display-name: win32-x64
            os: windows-2019
            target-arch: x64
          - display-name: linux-musl-x64
            os: ubuntu-latest
            container: node:20-alpine
            target-arch: x64

    steps:
      - name: Dependencies (Linux musl)
        if: contains(matrix.container, 'alpine')
        run: apk add build-base python3 --update-cache

      - name: Set git to use LF line endings
        if: contains(matrix.os, 'windows')
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout
        uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2

      - name: Setup Node.js environment
        if: "!contains(matrix.container, 'alpine')"
        uses: actions/setup-node@v3
        with:
          node-version: 20
          architecture: ${{ matrix.target-arch }}
          cache: 'pnpm'

      - name: Print versions
        run: |
          node --version
          pnpm --version
          node -p "process.platform + '@' + process.arch"

      - name: Install dependencies
        run: pnpm install

      - name: Prebuild
        run: pnpm -r prebuild -u ${{ secrets.GITHUB_TOKEN }}
